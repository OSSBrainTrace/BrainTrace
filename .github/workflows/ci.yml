name: ci
on:
  workflow_dispatch: 
  pull_request:
    branches: [dev]

jobs:
  build-and-check:
    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:5
        ports: ['7474:7474', '7687:7687']
        env:
          NEO4J_AUTH: none
          # 필요 시 APOC
          NEO4J_PLUGINS: '["apoc"]'
        # HTTP 살아날 때까지 대기 (간단 헬스체크)
        options: >-
          --health-cmd "wget --spider -q http://localhost:7474 || exit 1"
          --health-interval 5s --health-retries 60 --health-timeout 5s

    steps:
      - uses: actions/checkout@v4

      # --- Neo4j 시드: cypher-shell 다운로드 후 실행 ---
      - name: Install cypher-shell (standalone)
        run: |
          curl -L -o cypher-shell.zip https://github.com/neo4j/cypher-shell/releases/download/1.1.15/cypher-shell.zip
          unzip -q cypher-shell.zip -d ./cypher-shell
          chmod +x ./cypher-shell/bin/cypher-shell
      - name: Wait for Bolt & seed schema/data
        run: |
          for i in {1..60}; do
            ./cypher-shell/bin/cypher-shell -a bolt://localhost:7687 -u neo4j -p test "RETURN 1" && break
            sleep 2
          done
          ./cypher-shell/bin/cypher-shell -a bolt://localhost:7687 -u neo4j -p test -f backend/seed/00_schema.cypher
        # 참고: cypher-shell 사용/설치 문서
        # https://neo4j.com/docs/operations-manual/current/cypher-shell/

      # --- Backend 빌드/스모크 ---
      - uses: actions/setup-python@v5
        with: { python-version: '3.11', cache: 'pip' }
      - name: Backend deps & compile check
        working-directory: backend
        run: |
          pip install -r requirements.txt
          python -m compileall -q .
      # --- Frontend 빌드 ---
      - uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Frontend build
        working-directory: frontend
        run: |
          npm ci
          npm run build
